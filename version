v1.0.0
初始版本

v1.0.1
(1) pythonprocess是以进程方式启动Python
注意的2点: 
① 先启动进程后再客户端去连接，否则会阻塞
② start进程的参数必须指定python.exe的全路径，也就是"bin/python310/python.exe"
将这个类归入obsolete不参与编译（这个类是可用的）
(2) startpython和pythonthread类,以线程方式启动Python
其中startpython是单例类,内部持有pythonthread指针
注意的4点: 
① 先启动线程后再客户端去连接，否则会阻塞
② 线程无需指定python.exe,是通过调函数的方式启动
但是需要通过PyImport_ImportModule手动导入模型即"test_socket"
需要通过PyObject_CallFunction手动调用函数即"test_server"
③ 线程方式有个好处,python脚本的print信息可以在c++终端可见,因为这个线程是c++启动的
④ 线程的方式开发时没有问题,但是打包到其他电脑运行会提示错误,套接字不能跨线程通信
这也是为何startpython和pythonthread不使用的原因
如果不需要套接字通信仅仅是启动个脚本,线程/进程方式均可,否则只能使用进程方式
将这2个类归入obsolete不参与编译（这2个类是条件可用的）
(3) pythoncall类,非进程也非线程而是直接通过Python.h的API调用脚本
注意的2点: 
① 适用于调用不带阻塞逻辑的脚本,如果阻塞就会一直等待无法执行C++窗口
② 调用带有相对路径的脚本,必须使用PyRun_SimpleString执行路径添加,否则不认识
QString appendPath = QString("sys.path.append('%1')").arg(path); // 必须要把../test加入路径否则不认识
PyRun_SimpleString(appendPath.toStdString().c_str());// "sys.path.append('../test')"
将这个类归入obsolete不参与编译（这个类是条件可用的）
(4)主程序main.cpp这样去使用以上3个类:
    1) 进程方式
    auto process = new PythonProcess;
    process->start("../test/test_socket.py");
    2) 线程方式
    StartPythonPointer->start("../test","test_socket","test_server");
    3) 非线程也非进程方式(会阻塞)
    PythonCallPointer->start("../test","test_socket","test_server");
(5) obsolete放了一些其它过时不可用的类,这些类只是留着以后可能参考其中的某些逻辑,减少不用的类的编译，提高编译速度
(6) cmakelist保留了引入Python310库的操作,下一版本完全注释掉

v1.0.2
(1) 取消通道缩略图,ViewMode放在ObjectiveBox下边
(2) 把wellbox提到wellpattern上边
(3) 去除Preview的所有相机逻辑
(4) 去除use_tab的所有逻辑
(5) RadioGroup增加垂直方向的设置
(6) DoubleSlider增加前后缀文本可显示隐藏的功能
(7) CameraBox去掉merge按钮,增加auto/save focus按钮
(8) 把FocusBox的功能挪到CameraBox(slider,step,top,bottom,steplabel)
(9) 取消dock和dockcanvas的功能,改用堆叠界面实现

v1.0.3
(1) Objective增加位置描述文本
(2) 去除stackview堆叠界面,去除slideview,堆叠顺序为
stack_view_pattern => stack_pattern => wellpattern
                                    => slidepattern
                   => wellview  
(3) 删孔功能增加框选删除,注意删孔时总是要更新组别下拉框的图标     
(4) 选择视野取消apply-hole-group_all的动作菜单改为弹出窗口
(5) 修改previewtool->toolInfo(),删除wellbox的相关逻辑,增加PreviewTool的方便读函数
(6) 增加移动电机检测是否已开灯,没开灯就帮助开默认的通道BR或者PH
(7) 增加AutoFocus在expertool的功能
(8) previewtool/expertool的所有功能转移到了preview内去写,比较简单方便,少了间接的过程

v1.0.4
(1) 由于去除了previewtool/expertool,对loadExper,export/importExperConfig函数全部重写
    把previewtool,expertool移入过时不再参与编译
(2) 增加graphicsview的功能,支持图像旋转和缩放
