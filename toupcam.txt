// 定义了一个结构体的别名，关闭相机这用到
typedef struct Toupcam_t { int unused; } *HToupcam, *HToupCam;

exposure gain 默认值和最小值是100
hue -180 ~ 180,默认0

SATURATION 0~255 默认128

BRIGHTNESS -64 ~ 64 默认0

CONTRAST -100 ~ 100

GAMMA 20~180 默认100

TOUPCAM_API(HRESULT)  Toupcam_get_ResolutionNumber(HToupcam h);
TOUPCAM_API(HRESULT)  Toupcam_get_Resolution(HToupcam h, unsigned nResolutionIndex, int* pWidth, int* pHeight);

TOUPCAM_API(HRESULT)  Toupcam_put_Hue(HToupcam h, int Hue);
TOUPCAM_API(HRESULT)  Toupcam_get_Hue(HToupcam h, int* Hue);
TOUPCAM_API(HRESULT)  Toupcam_put_Saturation(HToupcam h, int Saturation);
TOUPCAM_API(HRESULT)  Toupcam_get_Saturation(HToupcam h, int* Saturation);
TOUPCAM_API(HRESULT)  Toupcam_put_Brightness(HToupcam h, int Brightness);
TOUPCAM_API(HRESULT)  Toupcam_get_Brightness(HToupcam h, int* Brightness);
TOUPCAM_API(HRESULT)  Toupcam_get_Contrast(HToupcam h, int* Contrast);
TOUPCAM_API(HRESULT)  Toupcam_put_Contrast(HToupcam h, int Contrast);
TOUPCAM_API(HRESULT)  Toupcam_get_Gamma(HToupcam h, int* Gamma); /* percent */
TOUPCAM_API(HRESULT)  Toupcam_put_Gamma(HToupcam h, int Gamma);  /* percent */

TOUPCAM_API(HRESULT)  Toupcam_put_AutoExpoRange(HToupcam h, unsigned maxTime, unsigned minTime, unsigned short maxGain, unsigned short minGain);
TOUPCAM_API(HRESULT)  Toupcam_get_AutoExpoRange(HToupcam h, unsigned* maxTime, unsigned* minTime, unsigned short* maxGain, unsigned short* minGain);
TOUPCAM_API(HRESULT)  Toupcam_put_MaxAutoExpoTimeAGain(HToupcam h, unsigned maxTime, unsigned short maxGain);
TOUPCAM_API(HRESULT)  Toupcam_get_MaxAutoExpoTimeAGain(HToupcam h, unsigned* maxTime, unsigned short* maxGain);
TOUPCAM_API(HRESULT)  Toupcam_put_MinAutoExpoTimeAGain(HToupcam h, unsigned minTime, unsigned short minGain);
TOUPCAM_API(HRESULT)  Toupcam_get_MinAutoExpoTimeAGain(HToupcam h, unsigned* minTime, unsigned short* minGain);
TOUPCAM_API(HRESULT)  Toupcam_get_ExpoTime(HToupcam h, unsigned* Time); /* in microseconds */
TOUPCAM_API(HRESULT)  Toupcam_put_ExpoTime(HToupcam h, unsigned Time); /* in microseconds */
TOUPCAM_API(HRESULT)  Toupcam_get_RealExpoTime(HToupcam h, unsigned* Time); /* in microseconds, based on 50HZ/60HZ/DC */
TOUPCAM_API(HRESULT)  Toupcam_get_ExpTimeRange(HToupcam h, unsigned* nMin, unsigned* nMax, unsigned* nDef);



// 分辨率结构体
typedef struct {
    unsigned    width;
    unsigned    height;
} ToupcamResolution;

// 照相机模型结构体
typedef struct {
    const wchar_t*      name;        /* model name, in Windows, we use unicode */
    unsigned long long  flag;        /* TOUPCAM_FLAG_xxx, 64 bits */
    unsigned            maxspeed;    /* number of speed level, same as Toupcam_get_MaxSpeed(), speed range = [0, maxspeed], closed interval */
    unsigned            preview;     /* number of preview resolution, same as Toupcam_get_ResolutionNumber() */
    unsigned            still;       /* number of still resolution, same as Toupcam_get_StillResolutionNumber() */
    unsigned            maxfanspeed; /* maximum fan speed, fan speed range = [0, max], closed interval */
    unsigned            ioctrol;     /* number of input/output control */
    float               xpixsz;      /* physical pixel size in micrometer */
    float               ypixsz;      /* physical pixel size in micrometer */
    ToupcamResolution   res[16];
} ToupcamModelV2; /* camera model v2 */

// 照相机实例结构体
typedef struct {
    wchar_t               displayname[64];    /* display name */
    wchar_t               id[64];             /* unique and opaque id of a connected camera, for Toupcam_Open */
    const ToupcamModelV2* model;
} ToupcamDeviceV2; /* camera instance for enumerating */

// 所有连接到照相机的照相机实例
oupcam_EnumV2(ToupcamDeviceV2 arr[TOUPCAM_MAX]);

// 打开指定ID或者索引的照相机实例
Toupcam_Open(const wchar_t* camId);
Toupcam_OpenByIndex(unsigned index); 

// 关闭/停止/暂停照相机,关闭后不能再使用HToupcam
Toupcam_Close(HToupcam h);
Toupcam_Stop(HToupcam h);
Toupcam_Pause(HToupcam h, int bPause); /* 1 => pause, 0 => continue */

// 触发相机？ 拍照？
Toupcam_Trigger(HToupcam h, unsigned short nNumber);
TOUPCAM_API(HRESULT)  Toupcam_PullImageV3(HToupcam h, void* pImageData, int bStill, int bits, int rowPitch, ToupcamFrameInfoV3* pInfo);
TOUPCAM_API(HRESULT)  Toupcam_WaitImageV3(HToupcam h, unsigned nWaitMS, void* pImageData, int bStill, int bits, int rowPitch, ToupcamFrameInfoV3* pInfo);

// 每一帧图像的包含信息
typedef struct {
    unsigned            width;
    unsigned            height;
    unsigned            flag;       /* TOUPCAM_FRAMEINFO_FLAG_xxxx */
    unsigned            seq;        /* frame sequence number */
    unsigned long long  timestamp;  /* microsecond */
} ToupcamFrameInfoV2;
typedef struct {
    unsigned            width;
    unsigned            height;
    unsigned            flag;       /* TOUPCAM_FRAMEINFO_FLAG_xxxx */
    unsigned            seq;        /* frame sequence number */
    unsigned long long  timestamp;  /* microsecond */
    unsigned            shutterseq; /* sequence shutter counter */
    unsigned            expotime;   /* exposure time */
    unsigned short      expogain;   /* exposure gain */
    unsigned short      blacklevel; /* black level */
} ToupcamFrameInfoV3;


